apiVersion: v1
kind: ServiceAccount
metadata:
  name: greenops-backend
  namespace: greenops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: greenops-backend-role
  namespace: greenops
rules:
# Allow reading and writing to Supabase (via API, not direct Kubernetes access)
# This is just an example - in practice, the backend would use service accounts
# with minimal permissions in Supabase, not Kubernetes RBAC
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: greenops-backend-rolebinding
  namespace: greenops
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: greenops-backend-role
subjects:
- kind: ServiceAccount
  name: greenops-backend
  namespace: greenops
---
# For cluster-level access to metrics, if needed
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: greenops-metrics-reader
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: greenops-metrics-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: greenops-metrics-reader
subjects:
- kind: ServiceAccount
  name: greenops-backend
  namespace: greenops